export const runtime = 'edge';

import { Resend } from 'resend';

export const config = {
  api: {
    bodyParser: false,
  },
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Resend
const resend = new Resend(process.env.RESEND_API_KEY);

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const formData = await req.formData();
    const name = formData.get('name');
    const email = formData.get('email');
    const phone = formData.get('phone');
    const service = formData.get('service');
    const budget = formData.get('budget');
    const message = formData.get('message');

    console.log('üì© –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞:', { name, email, phone, service, budget, message });

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    await resend.emails.send({
      from: process.env.MAIL_FROM || 'no-reply@aimarket.az',
      to: 'info@aimarket.az',
      subject: '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ AIMarket.az',
      html: `
        <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Ñ–æ—Ä–º—ã</h2>
        <p><strong>–ò–º—è:</strong> ${name}</p>
        <p><strong>Email:</strong> ${email}</p>
        <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</p>
        <p><strong>–£—Å–ª—É–≥–∞:</strong> ${service}</p>
        <p><strong>–ë—é–¥–∂–µ—Ç:</strong> ${budget}</p>
        <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong></p>
        <p>${message}</p>
      `,
    });

    return res.status(200).json({ success: true });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞:', err);
    return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏' });
  }
}
